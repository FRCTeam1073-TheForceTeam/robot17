// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1073.robot17.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc1073.robot17.Robot;

/**
 *
 */
public class Gear10HighCrossAuto extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Gear10HighCrossAuto() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double autoDistanceToLift = 0;
    	double autoTurnLiftLeft = 0;
    	double autoTurnLiftRight = 0;
    	double autoTurnBoilerLeft = 0;
    	double autoTurnBoilerRight = 0;
    	double autoDistanceToBoiler = 0;
    	//Drive to Lift:
    	Robot.driveTrain.basicDrive(autoDistanceToLift, autoDistanceToLift);
    	//Turn and back onto lift (maybe using vision):
    	Robot.driveTrain.basicDrive(autoTurnLiftLeft, autoTurnLiftRight);
    	//Wait designated amount of time for driver to lift gear
    	//Turn towards boiler:
    	Robot.driveTrain.basicDrive(autoTurnBoilerLeft, autoTurnBoilerRight);
    	//Drive towards Boiler:
    	Robot.driveTrain.basicDrive(autoDistanceToBoiler, autoDistanceToBoiler);
		//Shoot 10 high goals:
    	Robot.launcher.spinMotor(autoConveyorSpeed, auto10HighLauncherSpeed);
    	//Turn perpendicular to wall
    	//Drive over boiler line:
    	Robot.driveTrain.basicDrive(left, right);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
