// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1073.robot17.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc1073.robot17.Logger;
import org.usfirst.frc1073.robot17.Robot;
import org.usfirst.frc1073.robot17.RobotMap;

/**
 *
 */
public class SpinConveyor extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public SpinConveyor() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.conveyor);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    
    protected void initialize() {
    }

    
    protected void execute() {
    	//Sets up the Operator Controller axis to a usable varible
    	double leftTriggerAxis = Robot.oi.operatorControl.getRawAxis(2);
    	double spinLock = 1200;
    	spinLock = Robot.robotPreferences.getDouble("spinLock", 1200);
    	double encoderValue = RobotMap.launcherlauncherMotor1.getSpeed();
    	
    	if(leftTriggerAxis >= 0.25 &&  Math.abs(encoderValue) > spinLock){
    		
    		//Actually Doing The Spinning
    		RobotMap.conveyorconveyorMotor.set(20);
    	}
    	else {
    		RobotMap.conveyorconveyorMotor.set(0);
    	}	
    }
    
    
    protected boolean isFinished() {
        return false;
    }

    
    protected void end() {
    }


    protected void interrupted() {
    	RobotMap.conveyorconveyorMotor.set(0);
    }
}
