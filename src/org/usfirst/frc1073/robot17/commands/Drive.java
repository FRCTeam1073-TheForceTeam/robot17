// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1073.robot17.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc1073.robot17.Robot;

/**
 *
 */
public class Drive extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Drive() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	/**RAWAXIS LIST
    	 * 1 - Left X
    	 * 2 - Left Y
    	 * 3 - Triggers
    	 * 4 - Right X
    	 * 5 - Right Y
    	 * 6 - DPad left/right
    	 **/
    	
    	double left;
    	double right;
    	
    	if (Robot.robotPreferences.getBoolean("Demo", false) == true)
    	{
    		//Sets right and left controllers to demo joysticks
    		left = Robot.oi.demoControlLeft.getY();
    		right = Robot.oi.demoControlRight.getY();
    	}
    	else
    	{
    		//Sets right and left controllers to normal xbox controllers
        	left = Robot.oi.driverControl.getRawAxis(1);
        	right = Robot.oi.driverControl.getRawAxis(4);
    	}
    	//double left = Robot.oi.driverControl.getRawAxis(2);
    	//double right = Robot.oi.driverControl.getRawAxis(4);
    	
    	//Robot.driveTrain.cubicDrive(left, right);
    	Robot.driveTrain.arcadeDrive(left*-1, right*-1);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
